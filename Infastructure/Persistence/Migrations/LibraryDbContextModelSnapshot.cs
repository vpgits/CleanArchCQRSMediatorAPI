// <auto-generated />
using System;
using CleanArchCQRSMediatorAPI.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CleanArchCQRSMediatorAPI.Persistence.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    partial class LibraryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CleanArchCQRSMediatorAPI.Domain.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("BookCategory")
                        .HasColumnType("int");

                    b.Property<Guid?>("BorrowedMemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvailable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("PublicationYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BorrowedMemberId");

                    b.ToTable("Book", (string)null);
                });

            modelBuilder.Entity("CleanArchCQRSMediatorAPI.Domain.Entities.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("MemberType")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Member", (string)null);

                    b.HasDiscriminator().HasValue("Member");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("CleanArchCQRSMediatorAPI.Domain.Entities.LibraryMember", b =>
                {
                    b.HasBaseType("CleanArchCQRSMediatorAPI.Domain.Entities.Member");

                    b.ToTable("Member", (string)null);

                    b.HasDiscriminator().HasValue("LibraryMember");
                });

            modelBuilder.Entity("CleanArchCQRSMediatorAPI.Domain.Entities.StaffMember", b =>
                {
                    b.HasBaseType("CleanArchCQRSMediatorAPI.Domain.Entities.Member");

                    b.Property<int>("StaffType")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("StaffMember");
                });

            modelBuilder.Entity("CleanArchCQRSMediatorAPI.Domain.Entities.Book", b =>
                {
                    b.HasOne("CleanArchCQRSMediatorAPI.Domain.Entities.LibraryMember", "BorrowedMember")
                        .WithMany("BorrowedBooks")
                        .HasForeignKey("BorrowedMemberId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("BorrowedMember");
                });

            modelBuilder.Entity("CleanArchCQRSMediatorAPI.Domain.Entities.LibraryMember", b =>
                {
                    b.Navigation("BorrowedBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
